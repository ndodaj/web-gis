version: '3.8'

services:
  postgis-db:
    image: postgis/postgis:14-3.3-alpine
    container_name: postgis-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: postgis-test
    ports:
      - "5432:5432"
    networks:
      - webgis-network
    volumes:
#      - postgres_data:/var/lib/postgresql/data
      - postgis_data:/var/lib/postgresql/data

  geoserver:
    image: oscarfonts/geoserver:latest
    container_name: geoserver
#    environment:
#      - GEOSERVER_ADMIN_PASSWORD=geoserver
    ports:
      - "8080:8080"
    networks:
      - webgis-network
    environment:
      - GEOSERVER_DATA_DIR=/var/local/geoserver_data
    volumes:
      - ./geoserver_data:/var/local/geoserver_data
    depends_on:
      - postgis-db

  webgis-fe:
    image: node:latest
    container_name: webgis-fe
    volumes:
      - ./angular-app:/app
    command: sh -c "npm install && npm run start"
    ports:
      - "4200:4200"
    networks:
      - webgis-network
    depends_on:
      - webgis


  webgis:
#    image: 'docker-spring-boot-postgres:latest'
    build:
      context: .
    container_name: webgis-be
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgis-db:5432/postgis-test
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - "8083:8083"
    networks:
      - webgis-network
    depends_on:
      - postgis-db

networks:
  webgis-network:
    driver: bridge

volumes:
  postgis_data:
  geoserver_data:
